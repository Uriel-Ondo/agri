services:
  web:
    build: .
    #ports:
    #  - "8004:8004"
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - media:/app/media
    restart: unless-stopped
    networks:
      - dr_sante_app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://web:8004/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always
    networks:
      - dr_sante_app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - dr_sante_app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data:
  redis-data:
  media:

networks:
  dr_sante_app-network:
    external: true